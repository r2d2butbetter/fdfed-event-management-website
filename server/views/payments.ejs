<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/common.css">
    <link rel="stylesheet" href="/css/navbar.css">
    <link rel="stylesheet" href="/css/payments.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <title><%= title || 'Payment' %></title>
</head>
<body>
    <%- include('partials/navbar') %>

    <div class="payment-page-container">
        <!-- Gradient blobs for background design -->
        <div class="gradient-blob blob-1"></div>
        <div class="gradient-blob blob-2"></div>
        <div class="gradient-blob blob-3"></div>

        <div class="container">
            <div class="payment-container">
                <h2 class="section-title">Secure Checkout</h2>
                <!-- <form action="/payments/process-payment" method="POST"> -->
                <form id="payment-form" novalidate>
                    <!-- <input type="hidden" name="eventId" value="<%= event._id %>"> -->
                    <input type="hidden" id="eventId" value="<%= event._id %>">
                    <div class="form-group">
                        <label for="name">Name:</label>
                        <input type="text" id="name" name="name" value="<%= user ? user.name : '' %>" required>
                    </div>
                    <div class="form-group">
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" value="<%= user ? user.email : '' %>" readonly>
                    </div>
                    <!-- <div class="form-group">
                        <label for="tickets">Number of Tickets:</label>
                        <div class="number-picker">
                            <button type="button" onclick="changeTickets(-1)">-</button>
                            <input type="number" id="tickets" name="tickets" min="1" max="10" step="1" value="1" required>
                            <button type="button" onclick="changeTickets(1)">+</button>
                        </div>
                    </div> -->
                    <div class="form-group">
                        <label for="tickets">Number of Tickets:</label>
                        <div class="number-picker">
                            <!-- <button 
                                type="button" 
                                onclick="changeTickets(-1)" 
                                id="decrease-btn">-</button> -->
                            
                            <button type="button" id="decrease-btn">-</button>
                            <input 
                                type="number" 
                                id="tickets" 
                                name="tickets" 
                                min="1" 
                                max="<%= ticketsLeft %>" 
                                step="1" 
                                value="1" 
                                required>
                            <!-- <button 
                                type="button" 
                                onclick="changeTickets(1)" 
                                id="increase-btn">+</button> -->
                            <button type="button" id="increase-btn">+</button>
                        </div>
                        <!-- <small id="tickets-left-message">
                            <%= ticketsLeft > 0 
                                ? `${ticketsLeft} tickets left` 
                                : 'Sold Out!' %>
                        </small> -->
                        <small id="tickets-left-message">
                         <%= ticketsLeft > 0 ? `${ticketsLeft} tickets left` : 'Sold Out!' %>
                        </small>
                    </div>

                    <div class="payment-section">
                        <div class="payment-tabs">
                            <div class="payment-tab active" data-tab="card">
                                <i class="fas fa-credit-card"></i> Card Payment
                            </div>
                            <div class="payment-tab" data-tab="upi">
                                <i class="fas fa-mobile-alt"></i> UPI Payment
                            </div>
                        </div>

                        <div class="payment-method-content active" id="card-payment">
                            <div class="card-info">
                                <div class="form-group">
                                    <label for="card-number">Card Number:</label>
                                    <input type="text" id="card-number" name="cardNumber" placeholder="1234 5678 9012 3456" pattern="\d{4} \d{4} \d{4} \d{4}" title="Please enter a valid 16-digit card number with spaces after every 4 digits">
                                </div>
                                <div class="form-group">
                                    <label for="card-expiry">Expiration Date:</label>
                                    <input type="text" id="card-expiry" name="cardExpiry" placeholder="MM/YY" pattern="(0[1-9]|1[0-2])\/([0-9]{2})" title="Please enter a valid expiration date in MM/YY format">
                                </div>
                                <div class="form-group">
                                    <label for="card-cvv">CVV:</label>
                                    <input type="text" id="card-cvv" name="cardCvv" placeholder="123" pattern="\d{3}" title="Please enter a valid 3 digit CVV">
                                </div>
                                <div class="form-group">
                                    <label for="card-name">Cardholder Name:</label>
                                    <input type="text" id="card-name" name="cardName" placeholder="Name as on card">
                                </div>
                            </div>
                        </div>

                        <div class="payment-method-content" id="upi-payment">
                            <div class="upi-info">
                                <div class="form-group">
                                    <label for="upi-id">UPI ID:</label>
                                    <input type="text" id="upi-id" name="upiId" placeholder="yourname@upi">
                                </div>
                                <div class="upi-qr">
                                    <p style="text-align: center; color: var(--gray-text);">Or scan QR code to pay</p>
                                    <div style="background: white; width: 150px; height: 150px; margin: 0 auto; border-radius: 8px; display: flex; align-items: center; justify-content: center;">
                                        <i class="fas fa-qrcode" style="font-size: 100px; color: #333;"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="secure-payment-badge">
                            <i class="fas fa-lock"></i>
                            <span>Your payment information is secure and encrypted</span>
                        </div>
                    </div>

                    <button type="submit" class="payment-btn">
                        <span>Pay Now</span>
                      </button>
                     <div id="payment-result-msg" style="margin-top: 1rem; font-weight: bold;"></div>  <!--new code -->
                </form>
            </div>
            
            <div class="event-details">
                <h3>Event Details</h3>
                
                <div class="event-image">
                    <img src="<%= event && event.image ? '/uploads/events/' + event.image : '/images/blank.png' %>" alt="<%= event && event.title ? event.title : 'Event Image' %>" onerror="this.onerror=null;this.src='/images/blank.png';">
                </div>
                
                <div class="event-info">
                    <i class="fas fa-bookmark"></i>
                    <span><%= event.title %></span>
                </div>
                
                <div class="event-info">
                    <i class="fas fa-calendar-alt"></i>
                    <span><%= new Date(event.startDateTime).toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) %></span>
                </div>
                
                <div class="event-info">
                    <i class="fas fa-clock"></i>
                    <span><%= new Date(event.startDateTime).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' }) %> to <%= new Date(event.endDateTime).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' }) %></span>
                </div>
                
                <div class="event-info">
                    <i class="fas fa-map-marker-alt"></i>
                    <span><%= event.venue %></span>
                </div>
                
                <div class="event-info">
                    <i class="fas fa-ticket-alt"></i>
                    <span>₹<%= event.ticketPrice %> per ticket</span>
                </div>
                
                <p class="total-amount">Total Amount: ₹<span id="total-amount"><%= event.ticketPrice %></span></p>
            </div>
        </div>
    </div>

<script>

        function changeTickets(amount) {
            const input = document.getElementById('tickets');
            const currentValue = parseInt(input.value);
            const newValue = currentValue + amount;
            
            if (newValue >= parseInt(input.min) && newValue <= parseInt(input.max)) {
                input.value = newValue;
                updateTotalAmount(newValue);
            }
        }

        function updateTotalAmount(tickets) {
            const pricePerTicket = <%= event.ticketPrice %>; // Get ticket price from the event data
            const totalAmount = tickets * pricePerTicket;
            document.getElementById('total-amount').textContent = totalAmount;
        }

        // Payment tab switching
        document.addEventListener('DOMContentLoaded', function() {
            const tabs = document.querySelectorAll('.payment-tab');
            
            tabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    // Remove active class from all tabs
                    tabs.forEach(t => t.classList.remove('active'));
                    
                    // Add active class to clicked tab
                    this.classList.add('active');
                    
                    // Hide all tab content
                    document.querySelectorAll('.payment-method-content').forEach(content => {
                        content.classList.remove('active');
                    });
                    
                    // Show selected tab content
                    const tabId = this.getAttribute('data-tab');
                    document.getElementById(tabId + '-payment').classList.add('active');
                });
            });

            // Format card number input with spaces after every 4 digits
            const cardNumberInput = document.getElementById('card-number');
            if (cardNumberInput) {
                cardNumberInput.addEventListener('input', function(e) {
                    let value = e.target.value.replace(/\s+/g, '').replace(/[^0-9]/gi, '');
                    let formattedValue = '';
                    
                    for (let i = 0; i < value.length; i++) {
                        if (i > 0 && i % 4 === 0) {
                            formattedValue += ' ';
                        }
                        formattedValue += value[i];
                    }
                    
                    if (formattedValue.length <= 19) { // 16 digits + 3 spaces
                        e.target.value = formattedValue;
                    } else {
                        e.target.value = formattedValue.slice(0, 19);
                    }
                });
            }

            // Format expiry date input
            const expiryInput = document.getElementById('card-expiry');
            if (expiryInput) {
                expiryInput.addEventListener('input', function(e) {
                    let value = e.target.value.replace(/\D/g, '');
                    
                    if (value.length > 2) {
                        value = value.slice(0, 2) + '/' + value.slice(2, 4);
                    }
                    
                    e.target.value = value;
                });
            }
            
            // Ensure CVV only contains digits and limit to 3 characters
            const cvvInput = document.getElementById('card-cvv');
            if (cvvInput) {
                cvvInput.addEventListener('input', function(e) {
                    let value = e.target.value.replace(/\D/g, ''); // Remove all non-digits
                    
                    if (value.length > 3) {
                        value = value.slice(0, 3); // Limit to 3 digits
                    }
                    
                    e.target.value = value;
                });
            }
            
            // Ensure name fields only contain letters and spaces
            const nameInput = document.getElementById('name');
            const cardNameInput = document.getElementById('card-name');
            
            const validateNameInput = function(e) {
                let value = e.target.value;
                let cleanValue = value.replace(/[^a-zA-Z\s]/g, ''); // Allow only letters and spaces
                
                if (value !== cleanValue) {
                    e.target.value = cleanValue;
                }
            };
            
            if (nameInput) {
                nameInput.addEventListener('input', validateNameInput);
            }
            
            if (cardNameInput) {
                cardNameInput.addEventListener('input', validateNameInput);
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
        const eventId = document.getElementById('eventId').value;
        const ticketsInput = document.getElementById('tickets');
        const ticketsLeftMsg = document.getElementById('tickets-left-message');
        const paymentResult = document.getElementById('payment-result-msg');
        const paymentForm = document.getElementById('payment-form');

        document.getElementById('decrease-btn').onclick = () => {
            let val = parseInt(ticketsInput.value);
            if (val > 1) ticketsInput.value = val - 1;
            updateTotalAmount();
        };

        document.getElementById('increase-btn').onclick = () => {
            let val = parseInt(ticketsInput.value);
            if (val < parseInt(ticketsInput.max)) ticketsInput.value = val + 1;
            updateTotalAmount();
        };

        function updateTotalAmount() {
            const pricePerTicket = <%= event.ticketPrice %>;
            const totalAmount = ticketsInput.value * pricePerTicket;
            document.getElementById('total-amount').textContent = totalAmount;
        }

        function fetchTicketsLeft() {
            fetch(`/payments/api/events/${eventId}/tickets-left`)
            .then(res => res.json())
            .then(data => {
                ticketsLeftMsg.textContent =
                data.ticketsLeft > 0 ? `${data.ticketsLeft} tickets left` : 'Sold Out!';
                ticketsInput.max = data.ticketsLeft;
                if (parseInt(ticketsInput.value) > data.ticketsLeft) {
                ticketsInput.value = data.ticketsLeft;
                updateTotalAmount();
                }
            });
        }

        paymentForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            paymentResult.textContent = '';
            paymentResult.style.color = '';

            const formData = {
            eventId,
            tickets: ticketsInput.value,
            name: document.getElementById('name').value.trim(),
            email: document.getElementById('email').value,
            // add other payment details if needed, e.g., cardNumber, upiId etc.
            };

            try {
            const response = await fetch('/payments/api/payments/process-payment-ajax', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData),
            });
            const data = await response.json();

            if (data.error) {
                paymentResult.textContent = `Error: ${data.error}`;
                paymentResult.style.color = 'red';
            } else if (data.success) {
                paymentResult.textContent = 'Payment successful! Redirecting...';
                paymentResult.style.color = 'green';

                ticketsLeftMsg.textContent =
                data.ticketsLeft > 0 ? `${data.ticketsLeft} tickets left` : 'Sold Out!';
                ticketsInput.max = data.ticketsLeft;

                if (parseInt(ticketsInput.value) > data.ticketsLeft) {
                ticketsInput.value = data.ticketsLeft;
                }
                updateTotalAmount();

                setTimeout(() => (window.location.href = '/user/dashboard'), 2000);
            }
            } catch (err) {
            paymentResult.textContent = 'An unexpected error occurred.';
            paymentResult.style.color = 'red';
            }
        });

        updateTotalAmount();
        fetchTicketsLeft();
        setInterval(fetchTicketsLeft, 15000); // polling tickets left every 15 seconds
        });

        //combined code bellow can replace the entire script with the bellow code 
// document.addEventListener('DOMContentLoaded', () => {
//   const eventId = document.getElementById('eventId').value;
//   const ticketsInput = document.getElementById('tickets');
//   const ticketsLeftMsg = document.getElementById('tickets-left-message');
//   const paymentResult = document.getElementById('payment-result-msg');
//   const paymentForm = document.getElementById('payment-form');
//   const paymentTabs = document.querySelectorAll('.payment-tab');

//   document.getElementById('decrease-btn').onclick = () => {
//     let val = parseInt(ticketsInput.value);
//     if (val > 1) ticketsInput.value = val - 1;
//     updateTotalAmount();
//   };

//   document.getElementById('increase-btn').onclick = () => {
//     let val = parseInt(ticketsInput.value);
//     if (val < parseInt(ticketsInput.max)) ticketsInput.value = val + 1;
//     updateTotalAmount();
//   };

//   function updateTotalAmount() {
//     const pricePerTicket = <%= event.ticketPrice %>;
//     const totalAmount = ticketsInput.value * pricePerTicket;
//     document.getElementById('total-amount').textContent = totalAmount;
//   }

//   function fetchTicketsLeft() {
//     fetch(`/payments/api/events/${eventId}/tickets-left`)
//       .then(res => res.json())
//       .then(data => {
//         ticketsLeftMsg.textContent =
//           data.ticketsLeft > 0 ? `${data.ticketsLeft} tickets left` : 'Sold Out!';
//         ticketsInput.max = data.ticketsLeft;
//         if (parseInt(ticketsInput.value) > data.ticketsLeft) {
//           ticketsInput.value = data.ticketsLeft;
//           updateTotalAmount();
//         }
//       });
//   }

//   function getActivePaymentMethod() {
//     const activeTab = document.querySelector('.payment-tab.active');
//     return activeTab ? activeTab.getAttribute('data-tab') : 'card';
//   }

//   paymentTabs.forEach(tab => {
//     tab.addEventListener('click', () => {
//       paymentTabs.forEach(t => t.classList.remove('active'));
//       tab.classList.add('active');

//       document.querySelectorAll('.payment-method-content').forEach(content => {
//         content.classList.remove('active');
//       });
//       document.getElementById(tab.getAttribute('data-tab') + '-payment').classList.add('active');
//     });
//   });

//   paymentForm.addEventListener('submit', async (e) => {
//     e.preventDefault();
//     paymentResult.textContent = '';
//     paymentResult.style.color = '';

//     const paymentMethod = getActivePaymentMethod();
//     const postData = {
//       eventId,
//       tickets: ticketsInput.value,
//       name: document.getElementById('name').value.trim(),
//       email: document.getElementById('email').value,
//       paymentMethod,
//     };

//     if (paymentMethod === 'card') {
//       postData.cardNumber = document.getElementById('card-number').value.trim();
//       postData.cardExpiry = document.getElementById('card-expiry').value.trim();
//       postData.cardCvv = document.getElementById('card-cvv').value.trim();
//       postData.cardName = document.getElementById('card-name').value.trim();
//     } else if (paymentMethod === 'upi') {
//       postData.upiId = document.getElementById('upi-id').value.trim();
//     }
//     console.log('Payment data sent:', postData);
//     try {
//       const response = await fetch('/payments/api/payments/process-payment-ajax', {
//         method: 'POST',
//         headers: { 'Content-Type': 'application/json' },
//         body: JSON.stringify(postData),
//       });
//       const data = await response.json();
//       console.log('Response received:', data);
//       if (data.error) {
//         paymentResult.textContent = `Error: ${data.error}`;
//         paymentResult.style.color = 'red';
//       } else if (data.success) {
//         paymentResult.textContent = 'Payment successful! Redirecting...';
//         paymentResult.style.color = 'green';

//         ticketsLeftMsg.textContent =
//           data.ticketsLeft > 0 ? `${data.ticketsLeft} tickets left` : 'Sold Out!';
//         ticketsInput.max = data.ticketsLeft;

//         if (parseInt(ticketsInput.value) > data.ticketsLeft) {
//           ticketsInput.value = data.ticketsLeft;
//         }
//         updateTotalAmount();

//         setTimeout(() => (window.location.href = '/user/dashboard'), 2000);
//       }
//     } catch (err) {
//       paymentResult.textContent = 'An unexpected error occurred.';
//       paymentResult.style.color = 'red';
//     }
//   });

//   updateTotalAmount();
//   fetchTicketsLeft();
//   setInterval(fetchTicketsLeft, 15000); // poll tickets left every 15 seconds
// });

</script>


    <%- include('partials/footer') %>
</body>
</html>